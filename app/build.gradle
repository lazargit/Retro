apply plugin: 'com.android.application'


android {
    def globalConfiguration = rootProject.extensions.getByName("ext")
    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

    defaultConfig {
        applicationId 'com.shamildev.retro'
        minSdkVersion 19//globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")
        versionName globalConfiguration.getAt("androidVersionName")
        testInstrumentationRunner globalConfiguration.getAt("testApplicationId")

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath false
            }
        }

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.debug
        }
    }
    /* allow using java 8 lambda */
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8


    }
    buildTypes.each{
        it.buildConfigField 'String', 'MOVIE_DB_API_TOKEN', MovieDBApiToken
    }


    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }
    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        disable 'InvalidPackage'            //Some libraries have issues with this.
        disable 'OldTargetApi'
        //Lint gives this warning but SDK 20 would be Android L Beta.
        disable 'IconDensities'             //For testing purpose. This is safe to remove.
        disable 'IconMissingDensityFolder'  //For testing purpose. This is safe to remove.
    }
    signingConfigs {
        debug {
            storeFile file('../buildsystem/debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }
    buildToolsVersion '26.0.2'
    productFlavors {

    }
}

dependencies {
    testImplementation 'junit:junit:4.12'
    //
    //    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //    implementation 'com.android.support:appcompat-v7:25.0.0'
    //    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    //
    //    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    //    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    def presentationDependencies = rootProject.ext.presentationDependencies
    def presentationTestDependencies = rootProject.ext.presentationTestDependencies
    def developmentDependencies = rootProject.ext.developmentDependencies
    implementation project(':domain')
    implementation project(':data')


    //RX
    compile                    presentationDependencies.rx.rxJava
    compile                    presentationDependencies.rx.rxAndroid

/*
    androidSupport : [

                  recyclerView :   "com.android.support:recyclerview-v7:${androidSupportVersion}",
                  supportCompat:   "com.android.support:support-compat:${androidSupportVersion}",
                  coreUi:          "com.android.support:support-core-ui:${androidSupportVersion}",
                  appCompat:       "com.android.support:appcompat-v7:${androidSupportVersion}",
                  designSupport:   "com.android.support:design:${androidSupportVersion}",
                  vectorSupport:   "com.android.support:support-vector-drawable:${androidSupportVersion}",
                  cardView:        "com.android.support:cardview-v7:${androidSupportVersion}",
                  palette:         "com.android.support:palette-v7:${androidSupportVersion}",
                  constrainlayout: "com.android.support.constraint:constraint-layout:${constraintlayoutVersion}",
 */

    compile                           presentationDependencies.butterKnife.core
    annotationProcessor               presentationDependencies.butterKnife.compiler

    implementation                    presentationDependencies.dagger.core
    annotationProcessor               presentationDependencies.dagger.compiler
    annotationProcessor               presentationDependencies.dagger.android.processor
    implementation                    presentationDependencies.dagger.android.core
    implementation                    presentationDependencies.androidSupport.recyclerView
    implementation                    presentationDependencies.androidSupport.supportCompat
    implementation                    presentationDependencies.androidSupport.coreUi
    implementation                    presentationDependencies.androidSupport.appCompat
    implementation                    presentationDependencies.androidSupport.designSupport
    implementation                    presentationDependencies.androidSupport.cardView
    implementation                    presentationDependencies.androidSupport.constrainlayout
    annotationProcessor               presentationDependencies.autoValue.autoValue
    annotationProcessor               presentationDependencies.javaxAnnotation



    androidTestImplementation presentationTestDependencies.mockito
    androidTestImplementation presentationTestDependencies.dexmaker
    androidTestImplementation presentationTestDependencies.dexmakerMockito
    androidTestImplementation presentationTestDependencies.espresso
    androidTestImplementation presentationTestDependencies.testingSupportLib
    //Development
    // compile developmentDependencies.leakCanary
    compile developmentDependencies.timber
}
