/*
 * Copyright 2017 Vandolf Estrellado
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Generates Javadoc.
 */

apply from: "$rootDir/config/building/com.shamildev.retro.data.utils.gradle"

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

// Remove existing plugin task definitions for Java only modules
removeCheckTaskIf("javadoc", Javadoc)

task javadoc(type: Javadoc) {
    group = "Documentation"
    description = "Generates Javadoc for all build variants."
}

def generateJavadocTask(buildVariant, sourceSets, classpathFiles) {
    def javadocVariant = "${buildVariant}Javadoc"

    task(javadocVariant, type: Javadoc) {
        group = "Documentation"
        description = "Generates Javadoc for the ${buildVariant} build variant."

        source = sourceSets
        destinationDir = file("$buildDir/docs/javadoc/${buildVariant}")

        if (classpathFiles != null) {
            classpath = files(classpathFiles)
        }
    }

    tasks.javadoc.dependsOn javadocVariant
}

def generateJavadocTaskForVariant(variant) {
    generateJavadocTask(variant.name, variant.javaCompile.source, variant.javaCompile.classpath.files)
}

ext{
    generateJavadocTask = this.&generateJavadocTask
    generateJavadocTaskForVariant = this.&generateJavadocTaskForVariant
}