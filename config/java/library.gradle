/*
 * Copyright 2017 Vandolf Estrellado
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'java-library'
apply plugin: 'idea' // required for net.ltgt.apt plugin to work in IntelliJ/Android Studio
apply plugin: "net.ltgt.apt"

apply from: "$projectDir/config/coverage/jacoco.gradle"
apply from: "$rootDir/config/documentation/javadoc-java-main.gradle"
apply from: "$rootDir/config/quality/quality-java-main.gradle"
apply from: "$rootDir/config/testing/share-tests-java-library.gradle"

/*
 * FIXME (LAMBDA) - Set to 1.8 in order to use lambdas in all Java library modules
 *
 * This is currently required to be set to 1.7 for Android Dex:
 * Dex: Error converting bytecode to dex:
 * Cause: Dex cannot parse version 52 byte code.
 * This is caused by library dependencies that have been compiled using Java 8 or above.
 * If you are using the 'java' gradle plugin in a library submodule add
 * targetCompatibility = '1.7'
 * sourceCompatibility = '1.7'
 * to that submodule's build.gradle file.
 *
 * We could apply an android plugin instead of a java plugin to fix this issue.
 * However, if a library can be pure Java then it should. The data and domain layers
 * (which use the java-library plugin), especially the domain layer, need to be framework agnostic
 * as ruled by clean architecture principles. This means that they should not contain references
 * to frameworks like Android.
 *
 * Retrolambda and Jack does not fix this issue. However, this should be fixed soon in the upcoming
 * Android Studio 3.0 release. See the notes in the root project's *build.gradle*.
 *
 * See https://issuetracker.google.com/issues/37101513
 */
targetCompatibility = '1.7'
sourceCompatibility = '1.7'

// targetCompatibility = rootProject.ext.versions.build.java.targetCompatibility
// sourceCompatibility = rootProject.ext.versions.build.java.sourceCompatibility